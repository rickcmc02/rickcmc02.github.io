{"version":3,"sources":["../node_modules/react-transition-group/node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/react-transition-group/esm/CSSTransition.js","components/Stock.js","components/TabContent.js","layouts/Detail.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","removeClass","node","classes","split","forEach","c","removeOneClass","CSSTransition","_React$Component","_this","_len","args","Array","_key","concat","appliedClasses","appear","enter","exit","onEnter","maybeNode","maybeAppearing","_this$resolveArgument","resolveArguments","appearing","removeClasses","addClass","props","onEntering","_this$resolveArgument2","type","onEntered","_this$resolveArgument3","onExit","onExiting","onExited","nodeRef","current","getClassNames","classNames","isStringClassNames","baseClassName","activeClassName","doneClassName","_inheritsLoose","_proto","phase","className","scrollTop","addOneClass","_addClass","_this$appliedClasses$","base","active","done","render","_this$props","_objectWithoutPropertiesLoose","React","createElement","Transition","Component","defaultProps","propTypes","Stock","stock","id","TabContent","useEffect","switch0Change","tab","connect","state","reducer","alertOpen","reducer2","useState","alertInv","alertInvOn","tabChange","switch0","useParams","selectedItem","shoes","find","item","history","useHistory","arr","localStorage","getItem","JSON","parse","push","Set","setItem","stringify","Timer","setTimeout","clearTimeout","title","src","Number","width","content","price","onClick","dispatch","payload","name","quan","style","background","Nav","variant","defaultActiveKey","Item","Link","eventKey","in","timeout"],"mappings":"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","file":"static/js/3.e52ee24a.chunk.js","sourcesContent":["export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport addOneClass from 'dom-helpers/addClass';\nimport removeOneClass from 'dom-helpers/removeClass';\nimport React from 'react';\nimport Transition from './Transition';\nimport { classNamesShape } from './utils/PropTypes';\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return addOneClass(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return removeOneClass(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should\n * use it if you're using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**, so it's\n * important to add `transition` declaration only to them, otherwise transitions\n * might not behave as intended! This might not be obvious when the transitions\n * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in\n * the example above (minus `transition`), but it becomes apparent in more\n * complex transitions.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument[0],\n          appearing = _this$resolveArgument[1];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntering = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument2[0],\n          appearing = _this$resolveArgument2[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntered = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument3[0],\n          appearing = _this$resolveArgument3[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onExit = function (maybeNode) {\n      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument4[0];\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(maybeNode);\n      }\n    };\n\n    _this.onExiting = function (maybeNode) {\n      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument5[0];\n\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(maybeNode);\n      }\n    };\n\n    _this.onExited = function (maybeNode) {\n      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument6[0];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(maybeNode);\n      }\n    };\n\n    _this.resolveArguments = function (maybeNode, maybeAppearing) {\n      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`\n      : [maybeNode, maybeAppearing];\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    var _this$getClassNames = this.getClassNames('enter'),\n        doneClassName = _this$getClassNames.doneClassName;\n\n    if (type === 'appear' && phase === 'done' && doneClassName) {\n      className += \" \" + doneClassName;\n    } // This is for to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      /* eslint-disable no-unused-expressions */\n      node && node.scrollTop;\n    }\n\n    if (className) {\n      this.appliedClasses[type][phase] = className;\n\n      _addClass(node, className);\n    }\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"classNames\"]);\n\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(React.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, Transition.propTypes, {\n  /**\n   * The animation classNames applied to the component as it appears, enters,\n   * exits or has finished the transition. A single name can be provided, which\n   * will be suffixed for each stage, e.g. `classNames=\"fade\"` applies:\n   *\n   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`\n   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`\n   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`\n   *\n   * A few details to note about how these classes are applied:\n   *\n   * 1. They are _joined_ with the ones that are already defined on the child\n   *    component, so if you want to add some base styles, you can use\n   *    `className` without worrying that it will be overridden.\n   *\n   * 2. If the transition component mounts with `in={false}`, no classes are\n   *    applied yet. You might be expecting `*-exit-done`, but if you think\n   *    about it, a component cannot finish exiting if it hasn't entered yet.\n   *\n   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This\n   *    allows you to define different behavior for when appearing is done and\n   *    when regular entering is done, using selectors like\n   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply\n   *    an epic entrance animation when element first appears in the DOM using\n   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   *    simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nexport default CSSTransition;","const Stock = (props) => {\r\n  return (\r\n    <p># {props.stock[props.id]} Left</p>\r\n  )\r\n}\r\n\r\nexport default Stock\r\n","import { useEffect } from 'react'\r\n\r\nconst TabContent = (props) => {\r\n\r\n  useEffect(()=>{\r\n    props.switch0Change(true);\r\n  });\r\n\r\n  if (props.tab === 0) {\r\n    return <div>0 contents</div>\r\n  } else if (props.tab === 1) {\r\n    return <div>1 contents</div>\r\n  } else if (props.tab === 2) {\r\n    return <div>2 contents</div>\r\n  }\r\n}\r\n\r\nexport default TabContent\r\n","import { useState, useEffect } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport '../static/css/Detail.css';\r\nimport Stock from \"../components/Stock\";\r\nimport TabContent from \"../components/TabContent\";;\r\n\r\n\r\nconst Detail = (props) => {\r\n  \r\n  let [alertInv, alertInvOn] = useState(true);\r\n  let [tab, tabChange] = useState(0);\r\n  let [switch0, switch0Change] = useState(false);\r\n  let { id } = useParams();\r\n  let selectedItem = props.shoes.find(function(item){\r\n    return item.id == id\r\n  })\r\n  let history = useHistory();\r\n\r\n  useEffect(()=>{\r\n    // 최근 Detail 확인한 신발 arr 받아오기\r\n    var arr = localStorage.getItem('watched');\r\n    if (arr == null) {\r\n      arr = []\r\n    } else {\r\n      arr = JSON.parse(arr); \r\n    }\r\n\r\n    arr.push(id);\r\n    arr = new Set(arr);   // 중복제거\r\n    arr = [...arr];\r\n\r\n    localStorage.setItem('watched', JSON.stringify(arr) );\r\n\r\n    // 할인중 정보 알림\r\n    let Timer = setTimeout(()=>{ \r\n      alertInvOn(false)\r\n      return ()=>{ clearTimeout(Timer) }\r\n    }, 2000)\r\n  });\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h4>Detail Page</h4>\r\n      {\r\n        alertInv === true\r\n        ? (\r\n          <div className=\"inventory-alert\">\r\n            <p>The stock of {selectedItem.title} is running low.</p>\r\n          </div>\r\n          )\r\n        : null\r\n      }\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <img src={\"../shoe_img/shoes\" + (Number(id) + 1) + \".jpg\"} width=\"100%\" />\r\n        </div>\r\n        <div className=\"col-md-6 mt-4\">\r\n          <h4 className=\"pt-5\">\r\n            {selectedItem.title}\r\n          </h4>\r\n          <p>{selectedItem.content}</p>\r\n          <p>KRW {selectedItem.price}</p>\r\n          <Stock id={id} stock={props.stock} />\r\n          <button className=\"btn btn-danger\" \r\n            onClick={()=>{\r\n              props.dispatch({\r\n                type : 'productAdd', \r\n                payload : {id : selectedItem.id, name : selectedItem.title, quan: 1}\r\n              });\r\n              history.push('/cart');\r\n            }}\r\n          >Order</button>\r\n          <p></p>\r\n          <button className=\"btn\" style={{background : \"lightgray\"}}onClick={()=>{\r\n            history.push('/');\r\n          }}>Back</button> \r\n        </div>\r\n      </div>\r\n\r\n      <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"link-0\" onClick={()=>{\r\n            tabChange(0);\r\n            switch0Change(false);\r\n          }}>Option 0</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"link-1\" onClick={()=>{\r\n            tabChange(1)\r\n            switch0Change(false);\r\n          }}>Option 1</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"link-2\" onClick={()=>{\r\n            tabChange(2)\r\n            switch0Change(false);\r\n          }}>Option 2</Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n\r\n      <CSSTransition in={switch0} classNames=\"showTab\" timeout={500}>\r\n        <TabContent tab={tab} switch0Change={switch0Change}/>\r\n      </CSSTransition>\r\n    </div> \r\n  )\r\n}\r\n\r\nfunction stateToProps(state) {\r\n  return {\r\n    state : state.reducer,\r\n    alertOpen : state.reducer2\r\n  }\r\n}\r\n\r\nexport default connect(stateToProps)(Detail)\r\n"],"sourceRoot":""}